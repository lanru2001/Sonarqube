
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application.name }}
  namespace: {{.Values.namespace.name }}
  labels:
     app: infra-sonarqube-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: infra-sonarqube-deployment
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: infra-sonarqube-deployment
    spec:
      containers:
        - name: {{ .Values.application.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: sonarqube-port
              containerPort: 9000
              protocol: TCP
          envFrom:
          - configMapRef:
              name: sonar-config  
          volumeMounts:
          - name: app-pvc
            mountPath: "/opt/sonarqube/data/"
            subPath: data
          - name: app-pvc
            mountPath: "/opt/sonarqube/extensions/"
            subPath: extensions
          resources:
            requests:
              memory: "1024Mi"
            limits:
              memory: "2048Mi"
      volumes:
      - name: app-pvc
        persistentVolumeClaim:
          claimName: sonar-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.application.name }} 
  namespace: {{.Values.namespace.name}}
  labels:
      app: infra-sonarqube-deployment
    
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: 9000
      protocol: TCP
      name: sonarqube-port
  selector:
    app: infra-sonarqube-deployment

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonar-config
  namespace: sonarqube
  labels:
    app: sonar
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://10.85.53.11:5432/sonar_db"
  SONARQUBE_JDBC_USERNAME: "postgres"
  SONARQUBE_JDBC_PASSWORD: "cG9zdGdyZXMx" #decode with base64 
  JAVA_OPTS: "-Duser.timezone=America/Chicago -Xmx2048m"
